geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are not scaled proportionally to the number of observations")+ #ylim(0,40)+
coord_flip() #+facet_grid(two_hybrid_vs_AP_MS~Organism)
print(signif(data.frame("mass_median(log10.Da)" = Mass_median, "mass_median(kDa)" = (10^Mass_median)/1000),3))
print(paste0("disorder NAs: ",sum(is.na(proteome_vs_imex_interaction_details_f_Percent_disorder$REM465_PD))))
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD+1))})
kDa_median_mass = (Mass_median)
Mass_median
---
title: "disordered domains and phys-chem properties"
author: "Vitalii Kleshchevnikov"
date: "19 December 2016"
output: html_document
---
# Disordered domains and phys-chem properties
## How does the presence of disordered domains in proteins
### Literature overview
A collection of intrinsic disorder characterizations from eukaryotic proteomes.
https://www.ncbi.nlm.nih.gov/pubmed/27326998
Molecular signaling involving intrinsically disordered proteins in prostate cancer.
https://www.ncbi.nlm.nih.gov/pubmed/27212129
Sequence- and Structure-Based Analysis of Tissue-Specific Phosphorylation Sites.
https://www.ncbi.nlm.nih.gov/pubmed/27332813
Intrinsically Disordered Side of the Zika Virus Proteome.
https://www.ncbi.nlm.nih.gov/pubmed/27867910
Origin of a folded repeat protein from an intrinsically disordered ancestor.
https://www.ncbi.nlm.nih.gov/pubmed/27623012
### setting up parameters of the analysis
##=========================================================##
Species to select from:
"Homo sapiens", "Mus musculus", "strain ATCC 204508", "strain K12"
Paste value in the code chunk below
``` {r SPECIES_NAME}
SPECIES_NAME = "Homo sapiens"
```
all Uniprot if reviewed == 1, only Swissprot data if reviewed == 2,
TrEMBL data if reviewed == 3
only reviewed = 2 is relevant for this analysis
Paste value in the code chunk below
``` {r reviewed}
reviewed = 2
```
To distinguish between isoforms or not (to use only generic UniprotACs): TRUE / FALSE?
only isoforms = FALSE is relevant for this analysis
Paste value in the code chunk below
``` {r isoforms}
isoforms = FALSE
```
Please specify the date for which you want to perform the analysis (if not today)
"Logic table" from protein_properties script is needed for this analysis. Filename example:
"proteome_vs_interactome_protein_properties_f_Homo sapiens_reviewed_2_isoforms_FALSE_2016-12-01.txt"
``` {r date}
date = Sys.Date()
date = as.Date("2016-12-01")
```
the date of analysis, how old is Uniprot protein list: `r date`
### Species ID lookup
##=========================================================##
looking up species ID in the Uniprot readme file (always reads from url)
``` {r species_id_lookup}
source("SPECIES_NAME_TO_ID.R")
r = reviewed
i = isoforms
n = SPECIES_NAME
SPECIES_IDs = SPECIES_NAME_TO_ID(n)
SPECIES_ID = SPECIES_IDs$SPECIES_ID
```
Reading SQL database for information about the disordered proteins
```{r}
library("RSQLite")
# connect to the sqlite file
disorder = dbConnect(SQLite(), db = "Vincent_and_Schnell_2016_v2.db")
# get a list of all tables
alltables = dbListTables(disorder)
# get the everything from CD_counts table as a data.frame
Percent_disorder = dbGetQuery( disorder,'select * from Percent_disorder')
# count the areas in the SQLite table
Protein_properties = dbGetQuery( disorder,'select * from CIDER_data')
# get the everything from CD_counts table for UniProtKB_AC == 'O14746' as a data.frame
p3 = dbGetQuery( disorder,'select * from CIDER_data where UniProtKB_AC==\'O14746\'' )
dbDisconnect(disorder)
```
read the table saved before
- script can be started from here
``` {r reading_table}
filename = paste("./analysis/","proteome_vs_interactome_interaction_properties_f_", n,"_reviewed_",r,"_isoforms_",i,"_", date,".txt", sep = "")
proteome_vs_imex_interaction_details_f = as.data.frame(read.delim(filename, header = T, stringsAsFactors = F,quote=""))
proteome_vs_imex_interaction_details_f$whole_proteome_Uniprot_IMEx = factor(proteome_vs_imex_interaction_details_f$whole_proteome_Uniprot_IMEx, ordered =F)
proteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS = factor(proteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS, ordered =F)
```
merge % of protein disordered to interaction data
```{r}
proteome_vs_imex_interaction_details_f_Percent_disorder = merge(x = proteome_vs_imex_interaction_details_f,
y = Percent_disorder,
by.x = "whole_proteome_IDs",
by.y = "UniProtKB_AC",
all.x = T,
all.y = F)
print(paste0("disorder NAs: ",sum(is.na(proteome_vs_imex_interaction_details_f_Percent_disorder$REM465_PD))))
proteome_vs_imex_interaction_details_f_Percent_disorder[is.na(proteome_vs_imex_interaction_details_f_Percent_disorder)] = 0
```
## How does the fraction of disordered regions of protein influences it's detection in protein interactions?
``` {r violin_plot, fig.width = 12, fig.height = 12}
library(dplyr)
library(scales)
library(ggplot2)
## adding two_hybrid and AP_MS levels to show non-combinatory relationship (not
## excluding proteins present in both)
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
## Calculating protein median protein mass for each group
yy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD+1))})
kDa_median_mass = (Mass_median)
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (percent disorder: ", signif(kDa_median_mass,3)," %)")
## Violin plot - proportional
ggplot(for_plot, aes(y = Kappa, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
#  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
#                labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+ ylim(0,40)+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
## Violin plot - not proportional
ggplot(for_plot, aes(y = Kappa, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.490,0.5,0.510,0.75,0.95),scale = "area", alpha =0.7)+
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are not scaled proportionally to the number of observations")+ #ylim(0,40)+
coord_flip() #+facet_grid(two_hybrid_vs_AP_MS~Organism)
print(signif(data.frame("mass_median(log10.Da)" = Mass_median, "mass_median(kDa)" = (10^Mass_median)/1000),3))
```
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7)+
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are not scaled proportionally to the number of observations")+
coord_flip() #+facet_grid(two_hybrid_vs_AP_MS~Organism)
yy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD))})
Mass_median
set.seed(1)
xxxxx = rnorm(100,100,1)
xxxxx
median(log(xxxxx))
log(median(xxxxx))
xxxxx[c(1:15)] = 0
median(log(xxxxx))
log(median(xxxxx))
log(0)
median(log10(xxxxx))
log10(median(xxxxx))
log10(0)
log10(-1)
xxxxx = xxxxx +1
log10(median(xxxxx))
log10(median(xxxxx))
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD+0.1
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD+0.1
yy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD))})
kDa_median_mass = (Mass_median)
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (percent disorder: ", signif(kDa_median_mass,3)," %)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (percent disorder: ", signif(kDa_median_mass,3)," %)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = 10^Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD+1
## Calculating protein median protein mass for each group
yy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD))})
kDa_median_mass = (Mass_median)
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (percent disorder: ", signif(kDa_median_mass,3)," %)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = 10^Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
ecdf(log10(x$ICHR_consensus_PD)))
ecdf(log10(x$ICHR_consensus_PD))
ecdf(log10(filter(for_plot, for_plot$ICHR_consensus_PD == "not_in_IMEx"))
)
ecdf(log10(filter(for_plot$ICHR_consensus_PD, for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx")))
for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx"
filter(for_plot$ICHR_consensus_PD, for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx")
ecdf(log10(filter(for_plot, for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx")$ICHR_consensus_PD))
ecdf_diso = ecdf(log10(filter(for_plot, for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx")$ICHR_consensus_PD))
summary(ecdf_diso)
Mass_median
ecdf_yy = ecdf(log10(yy$not_in_IMEx$ICHR_consensus_PD)
)
summary(ecdf_yy)
library(dplyr)
library(scales)
library(ggplot2)
## adding two_hybrid and AP_MS levels to show non-combinatory relationship (not
## excluding proteins present in both)
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD
## Calculating protein median protein mass for each group
yy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(x$ICHR_consensus_PD))})
kDa_median_mass = (Mass_median)
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (percent disorder: ", signif(kDa_median_mass,3)," %)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
ecdf_diso = ecdf(log10(filter(for_plot, for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx")$ICHR_consensus_PD))
ecdf_yy = ecdf(log10(yy$not_in_IMEx$ICHR_consensus_PD))
summary(ecdf_diso)
summary(ecdf_yy)
## Violin plot - not proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7)+
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))+
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are not scaled proportionally to the number of observations")+
coord_flip() #+facet_grid(two_hybrid_vs_AP_MS~Organism)
print(signif(data.frame("mass_median(log10.Da)" = Mass_median, "mass_median(kDa)" = (10^Mass_median)/1000),3))
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("percent disorder, %, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does the fraction of disordered regions of protein influences it's detection in protein interactions?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
median(x$ICHR_consensus_PD)
x = yy$not_in_IMEx
median(x$ICHR_consensus_PD)
table(for_plot$two_hybrid_vs_AP_MS)
?table
table(for_plot$two_hybrid_vs_AP_MS,useNA = "ifany")
sum(table(for_plot$two_hybrid_vs_AP_MS,useNA = "ifany")[1:5])
sum(table(for_plot$two_hybrid_vs_AP_MS,useNA = "ifany")[c(1,2,3,5)])
table(for_plot$two_hybrid_vs_AP_MS,useNA = "ifany")[c(1,2,3,5)]
sum(table(for_plot$two_hybrid_vs_AP_MS,useNA = "ifany")[c(1,2,3,6)])
?split
library(dplyr)
library(ggplot2)
library(scales)
## adding two_hybrid and AP_MS levels to show non-combinatory relationship (not
## excluding proteins present in both)
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
## Calculating protein median protein mass for each group
yy = split(x=for_plot, f =for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$Mass))})
kDa_median_mass = (10^Mass_median)/1000
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (median mass: ", signif(kDa_median_mass,3)," kDa)")
## Violin plot - proportional
ggplot(for_plot, aes(y = Mass, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
## Violin plot - not proportional
ggplot(for_plot, aes(y = Mass, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "all violins have the same area")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
print(signif(data.frame("mass_median(log10.Da)" = Mass_median, "mass_median(kDa)" = (10^Mass_median)/1000),3))
```
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD +1
## Calculating protein median protein mass for each group
yy = split(x=for_plot, f =for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD))})
kDa_median_mass = (10^Mass_median)/1000
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (median mass: ", signif(kDa_median_mass,3)," kDa)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
## Violin plot - not proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "all violins have the same area")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "two_hybrid"])
log10(median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "two_hybrid"]))
log10(median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "AP_MS"]))
log10(median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEX"]))
for_plot$ICHR_consensus_PD
log10(median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEX"]))
median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEX"])
is.na(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEX"])
for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEX"]
median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx"])
log10(median(for_plot$ICHR_consensus_PD[for_plot$two_hybrid_vs_AP_MS == "not_in_IMEx"]))
library(dplyr)
library(ggplot2)
library(scales)
## adding two_hybrid and AP_MS levels to show non-combinatory relationship (not
## excluding proteins present in both)
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD +2
## Calculating protein median protein mass for each group
yy = split(x=for_plot, f =for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median(log10(x$ICHR_consensus_PD))})
kDa_median_mass = (10^Mass_median)/1000
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (median mass: ", signif(kDa_median_mass,3)," kDa)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
## Violin plot - not proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "all violins have the same area")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
print(signif(data.frame("mass_median(log10.Da)" = Mass_median, "mass_median(kDa)" = (10^Mass_median)/1000),3))
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "all violins have the same area")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
library(dplyr)
library(ggplot2)
library(scales)
## adding two_hybrid and AP_MS levels to show non-combinatory relationship (not
## excluding proteins present in both)
two_hybrid = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid == 1)
two_hybrid$two_hybrid_vs_AP_MS = "two_hybrid"
AP_MS = filter(proteome_vs_imex_interaction_details_f_Percent_disorder, AP_MS == 1)
AP_MS$two_hybrid_vs_AP_MS = "AP_MS"
for_plot = rbind(proteome_vs_imex_interaction_details_f_Percent_disorder, two_hybrid, AP_MS)
for_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)
for_plot$ICHR_consensus_PD = for_plot$ICHR_consensus_PD +2
## Calculating protein median protein mass for each group
yy = split(x=for_plot, f =for_plot$two_hybrid_vs_AP_MS)
Mass_median = sapply(yy, function(x){median((x$ICHR_consensus_PD))})
kDa_median_mass = (10^Mass_median)/1000
plot_labels = paste0(gsub("_"," ",levels(for_plot$two_hybrid_vs_AP_MS)),", \n (median mass: ", signif(kDa_median_mass,3)," kDa)")
## Violin plot - proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "count", alpha =0.7) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "violin areas are scaled proportionally to the number of observations")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
## Violin plot - not proportional
ggplot(for_plot, aes(y = ICHR_consensus_PD, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +
geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = "area", alpha =0.7) +
#  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
#                labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(labels = plot_labels)+
geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +
ylab("Mass, Da, log10 scale")+
xlab("presence in IMEx, detection method")+
ggtitle("How does protein interaction detection method depend on the protein length?",
subtitle = "all violins have the same area")+
coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)
print(signif(data.frame("mass_median(log10.Da)" = Mass_median, "mass_median(kDa)" = (10^Mass_median)/1000),3))
Mass_median
quantile()
