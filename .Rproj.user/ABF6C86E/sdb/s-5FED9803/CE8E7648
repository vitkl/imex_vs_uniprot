{
    "collab_server" : "",
    "contents" : "---\ntitle: \"How does protein interaction detection method depend on the protein length?\"\nauthor: \"Vitalii Kleshchevnikov\"\ndate: \"13 December 2016\"\noutput: html_document\n---\n\n### setting up parameters of the analysis\n##=========================================================##\nSpecies to select from:\n\"Homo sapiens\", \"Mus musculus\", \"strain ATCC 204508\", \"strain K12\"\nPaste value in the code chunk below\n``` {r SPECIES_NAME} \nSPECIES_NAME = \"Homo sapiens\"\n```\nall Uniprot if reviewed == 1, only Swissprot data if reviewed == 2, \nTrEMBL data if reviewed == 3\nonly reviewed = 2 is relevant for this analysis \nPaste value in the code chunk below\n``` {r reviewed}\nreviewed = 2\n```\nTo distinguish between isoforms or not (to use only generic UniprotACs): TRUE / FALSE?\nonly isoforms = FALSE is relevant for this analysis \nPaste value in the code chunk below\n``` {r isoforms}\nisoforms = FALSE\n```\nPlease specify the date for which you want to perform the analysis (if not today)\n\"Logic table\" from protein_properties script is needed for this analysis. Filename example:  \n\"proteome_vs_interactome_protein_properties_f_Homo sapiens_reviewed_2_isoforms_FALSE_2016-12-01.txt\"\n``` {r date}\ndate = Sys.Date()\ndate = as.Date(\"2016-12-01\")\n```\nthe date of analysis, how old is Uniprot protein list: `r date` \n\n### Species ID lookup\n##=========================================================##\nlooking up species ID in the Uniprot readme file (always reads from url)\n``` {r species_id_lookup}\nsource(\"SPECIES_NAME_TO_ID.R\")\nr = reviewed\ni = isoforms\nn = SPECIES_NAME\nSPECIES_IDs = SPECIES_NAME_TO_ID(n)\nSPECIES_ID = SPECIES_IDs$SPECIES_ID\n```\n\n### querying for interations detected by AP-MS or two hybrid using PSICQUIC \n##=========================================================##\nDetection method explanation:\n\n- detmethod:MI:0232 - transcriptional complementation assay, includes different two-hybrids\nhttp://www.ebi.ac.uk/ols/ontologies/mi/terms?iri=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2FMI_0232\n- detmethod:MI:0090 - protein complementation assay, includes transcriptional \ncomplementation assay and bimolecular fluorescence complementation, enzyme complementations\nhttp://www.ebi.ac.uk/ols/ontologies/mi/terms?iri=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2FMI_0090\n\n- both detmethod and pmethod are required for specifying AP-MS\n- detmethod:MI:0004 - affinity chromatography technology, co-IP and pulldowns\nhttp://www.ebi.ac.uk/ols/ontologies/mi/terms?iri=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2FMI_0004\n- pmethod:MI:0433 - partial identification of protein sequence\nhttp://www.ebi.ac.uk/ols/ontologies/mi/terms?iri=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2FMI_0433\n\nto change: type in exact database names (the list below - all IMEx -is default for the function)\n``` {r querying_PSICQUIC}\ndatabases <- c(\"IntAct\", \"MINT\", \"bhf-ucl\", \"MPIDB\", \"MatrixDB\", \n               \"HPIDb\",\"I2D-IMEx\",\"InnateDB-IMEx\", \"MolCon\", \"UniProt\", \"MBInfo\")\n\nsource(\"query_PSICQUIC_for_interactions.R\")\ntwohybrids_all_interactions = query_PSICQUIC_for_interactions(SPECIES_ID = SPECIES_ID, \n                                                   SPECIES_NAME = SPECIES_NAME, \n                                                   databases = databases, date,\n                                                   detmethod = \"transcriptional complementation assay\")\ncomplementation_all_interactions = query_PSICQUIC_for_interactions(SPECIES_ID = SPECIES_ID, \n                                                              SPECIES_NAME = SPECIES_NAME, \n                                                              databases = databases, date,\n                                                              detmethod = \"protein complementation assay\")\nap_ms_all_interactions = query_PSICQUIC_for_interactions(SPECIES_ID = SPECIES_ID, \n                                                         SPECIES_NAME = SPECIES_NAME, \n                                                         databases = databases, date,\n                                                         detmethod = \"affinity chromatography technology\",\n                                                         pmethod = \"partial identification of protein sequence\")\n```\n### Cleaning and transforming data\n##=========================================================##\nextracting interactor ID-s from interactions (MI-TAB 2.5)\n```{r interactions_to_interactors}\nsource(\"interactions_to_interactors.R\")\ntwohybrids_all_interactors = interactions_to_interactors(twohybrids_all_interactions)\ncomplementation_all_interactors = interactions_to_interactors(complementation_all_interactions)\nap_ms_all_interactors = interactions_to_interactors(ap_ms_all_interactions)\n```\nfiltering interactors for uniprotkb only indentifiers \nfiltering for SPECIES_ID only proteins\n```{r uniprotkb_and_SPECIES_ID_interactor_selector}\nsource(\"uniprotkb_and_SPECIES_ID_interactor_selector.R\")\ntwohybrids_all_interactors_SPECIES_ID_only = uniprotkb_and_SPECIES_ID_interactor_selector(twohybrids_all_interactors, SPECIES_ID)\ncomplementation_all_interactors_SPECIES_ID_only = uniprotkb_and_SPECIES_ID_interactor_selector(complementation_all_interactors, SPECIES_ID)\nap_ms_all_interactors_SPECIES_ID_only = uniprotkb_and_SPECIES_ID_interactor_selector(ap_ms_all_interactors, SPECIES_ID)\n```\nRemoving all isoform IDs (XXXXXX-X+ => XXXXXX) from IDs\n``` {r isoform_id_all_remover}\n  source(\"isoform_id_all_remover.R\")\n  twohybrids_all_interactors_SPECIES_ID_only$interactor_IDs = isoform_id_all_remover(twohybrids_all_interactors_SPECIES_ID_only$interactor_IDs)\n  complementation_all_interactors_SPECIES_ID_only$interactor_IDs = isoform_id_all_remover(complementation_all_interactors_SPECIES_ID_only$interactor_IDs)\n  ap_ms_all_interactors_SPECIES_ID_only$interactor_IDs = isoform_id_all_remover(ap_ms_all_interactors_SPECIES_ID_only$interactor_IDs)\n```\npreparing interaction detection method data for logic table: selecting unique proteins and adding the column of ones\n``` {r pre_logic_table}\nunique_twohybrids_interactors_SPECIES_ID_only = unique(cbind(twohybrids_all_interactors_SPECIES_ID_only[c(\"interactor_IDs\")], 1))\ncolnames(unique_twohybrids_interactors_SPECIES_ID_only)[2] = \"two_hybrid\"\nunique_complementation_interactors_SPECIES_ID_only = unique(cbind(complementation_all_interactors_SPECIES_ID_only[c(\"interactor_IDs\")], 1))\ncolnames(unique_complementation_interactors_SPECIES_ID_only)[2] = \"all_protein_complementation\"\nunique_ap_ms_interactors_SPECIES_ID_only = unique(cbind(ap_ms_all_interactors_SPECIES_ID_only[c(\"interactor_IDs\")], 1))\ncolnames(unique_ap_ms_interactors_SPECIES_ID_only)[2] = \"AP_MS\"\n```\nloading logic table made by \"swissprot_vs_imex_protein_properties\" script\n```{r loading_logic_table}\nfilename_vs_2 = paste(\"./analysis/\",\"proteome_vs_interactome_protein_properties_f_\", n,\"_reviewed_\",r,\"_isoforms_\",i,\"_\", date,\".txt\", sep = \"\")\nproteome_vs_imex_details_f = as.data.frame(read.delim(filename_vs_2, header = T, stringsAsFactors = F,quote=\"\"))\nproteome_vs_imex_details_f$whole_proteome_Uniprot_IMEx = factor(proteome_vs_imex_details_f$whole_proteome_Uniprot_IMEx, ordered =F)\n```\nmerging new results with the logic table\n```{r merging_logic_table}\nproteome_vs_imex_interaction_details_t1 = merge(proteome_vs_imex_details_f, \n                                   unique_twohybrids_interactors_SPECIES_ID_only, \n                                   by.x = \"whole_proteome_IDs\",\n                                   by.y = \"interactor_IDs\",\n                                   all.x = T, all.y = F)\nproteome_vs_imex_interaction_details_t2 = merge(proteome_vs_imex_interaction_details_t1, \n                                               unique_complementation_interactors_SPECIES_ID_only, \n                                               by.x = \"whole_proteome_IDs\",\n                                               by.y = \"interactor_IDs\",\n                                               all.x = T, all.y = F)\nproteome_vs_imex_interaction_details_f = merge(proteome_vs_imex_interaction_details_t2, \n                                               unique_ap_ms_interactors_SPECIES_ID_only, \n                                                by.x = \"whole_proteome_IDs\",\n                                                by.y = \"interactor_IDs\",\n                                                all.x = T, all.y = F)\nproteome_vs_imex_interaction_details_f[is.na(proteome_vs_imex_interaction_details_f)] = 0\n```\nadding factor combination variable - two_hybrid and AP_MS\n``` {r two_hybrid_vs_AP_MS}\nproteome_vs_imex_interaction_details_f[,length(proteome_vs_imex_interaction_details_f)+1] = interaction(proteome_vs_imex_interaction_details_f$two_hybrid, proteome_vs_imex_interaction_details_f$AP_MS, sep = \"_\")\ncolnames(proteome_vs_imex_interaction_details_f)[length(proteome_vs_imex_interaction_details_f)] = paste0(\"two_hybrid\", \"_vs_\",\"AP_MS\")\nlevels(proteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS) = c(\"not_two_hybrid_and_not_AP_MS\", \"two_hybrid_not_AP_MS\",\"not_two_hybrid_but_AP_MS\", \"two_hybrid_and_AP_MS\")\nproteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS = as.character(proteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS)\nproteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS[proteome_vs_imex_interaction_details_f$IMEx!=1] = \"not_in_IMEx\"\n```\nsaving combined logic table with protein properties from Uniprot and interaction properties combined\n``` {r saving_logic_table}\nfilename = paste(\"./analysis/\",\"proteome_vs_interactome_interaction_properties_f_\", n,\"_reviewed_\",r,\"_isoforms_\",i,\"_\", date,\".txt\", sep = \"\")\nwrite.table(proteome_vs_imex_interaction_details_f,filename,col.names=T,row.names=F,sep=\"\\t\",quote=F)\n```\n\n# Results\n##=========================================================##\nread the table saved before \n- script can be started from here\n``` {r reading_table}\nfilename = paste(\"./analysis/\",\"proteome_vs_interactome_interaction_properties_f_\", n,\"_reviewed_\",r,\"_isoforms_\",i,\"_\", date,\".txt\", sep = \"\")\nproteome_vs_imex_interaction_details_f = as.data.frame(read.delim(filename, header = T, stringsAsFactors = F,quote=\"\"))\nproteome_vs_imex_interaction_details_f$whole_proteome_Uniprot_IMEx = factor(proteome_vs_imex_interaction_details_f$whole_proteome_Uniprot_IMEx, ordered =F)\nproteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS = factor(proteome_vs_imex_interaction_details_f$two_hybrid_vs_AP_MS, ordered =F)\n```\n\n### The density and the histogram of the protein mass (overlay for different detection methods)\n##=========================================================##\n``` {r histogram_and_density, fig.width = 10, fig.height = 7}\nlibrary(ggplot2)\nggplot(proteome_vs_imex_interaction_details_f, aes(x = Mass, color =two_hybrid_vs_AP_MS, \n                                                   fill = two_hybrid_vs_AP_MS)) +\n  geom_density(alpha =0.2) + scale_x_log10() +\n  xlab(\"protein mass, Da, log10 scale\")+\n  ggtitle(\"density plot of the protein mass (overlay for different detection methods)\") #+facet_grid(two_hybrid_vs_AP_MS~Organism)\nggplot(proteome_vs_imex_interaction_details_f, aes(x = Mass,color = two_hybrid_vs_AP_MS)) +\n  scale_x_log10() + geom_histogram(position = \"identity\", bins = 50,alpha =0.1) +\n  xlab(\"protein mass, Da, log10 scale\") + \n  ggtitle(\"histogram of the protein mass (overlay for different detection methods)\")\n#+facet_grid(two_hybrid_vs_AP_MS~Organism)\n```\n\n### How does protein interaction detection method depend on the protein length? - Violin plot\n``` {r violin_plot, fig.width = 12, fig.height = 12}\nlibrary(dplyr)\nlibrary(scales) \n## adding two_hybrid and AP_MS levels to show non-combinatory relationship (not \n## excluding proteins present in both)\ntwo_hybrid = filter(proteome_vs_imex_interaction_details_f, two_hybrid == 1)\ntwo_hybrid$two_hybrid_vs_AP_MS = \"two_hybrid\"\nAP_MS = filter(proteome_vs_imex_interaction_details_f, AP_MS == 1)\nAP_MS$two_hybrid_vs_AP_MS = \"AP_MS\"\nfor_plot = rbind(proteome_vs_imex_interaction_details_f, two_hybrid, AP_MS)\nfor_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)\n## Calculating protein median protein mass for each group\nyy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)\nMass_median = sapply(yy, function(x){median(log10(x$Mass))})\nkDa_median_mass = (10^Mass_median)/1000\nplot_labels = paste0(gsub(\"_\",\" \",levels(for_plot$two_hybrid_vs_AP_MS)),\", \\n (median mass: \", signif(kDa_median_mass,3),\" kDa)\")\n## Violin plot - proportional\nggplot(for_plot, aes(y = Mass, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +\n  geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = \"count\", alpha =0.7) +\n  scale_y_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n                labels = trans_format(\"log10\", math_format(10^.x))) +\n  scale_x_discrete(labels = plot_labels)+\n  geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +\n  ylab(\"Mass, Da, log10 scale\")+\n  xlab(\"presence in IMEx, detection method\")+\n  ggtitle(\"How does protein interaction detection method depend on the protein length?\",\n          subtitle = \"violin areas are scaled proportionally to the number of observations\")+\n  coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)\n\n## Violin plot - not proportional\nggplot(for_plot, aes(y = Mass, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +\n  geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = \"area\", alpha =0.7) +\n  scale_y_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n                labels = trans_format(\"log10\", math_format(10^.x))) +\n  scale_x_discrete(labels = plot_labels)+\n  geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +\n  ylab(\"Mass, Da, log10 scale\")+\n  xlab(\"presence in IMEx, detection method\")+\n  ggtitle(\"How does protein interaction detection method depend on the protein length?\",\n          subtitle = \"all violins have the same area\")+\n  coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)\nprint(signif(data.frame(\"mass_median(log10.Da)\" = Mass_median, \"mass_median(kDa)\" = (10^Mass_median)/1000),3))\n```\n\nLet's filter all the proteins composing 36.7kDa peak in non-represented-in-IMEx group\n```{r filtering_small_unrepresented_proteins}\nproteome_vs_imex_interaction_details_f.not_in_IMEx = dplyr::filter(\n  proteome_vs_imex_interaction_details_f, two_hybrid_vs_AP_MS == \"not_in_IMEx\")\nproteome_vs_imex_interaction_details_f.32.42 = dplyr::filter(\n  proteome_vs_imex_interaction_details_f.not_in_IMEx, \n  32000 < proteome_vs_imex_interaction_details_f.not_in_IMEx$Mass)\nproteome_vs_imex_interaction_details_f.32.42 = dplyr::filter(\n  proteome_vs_imex_interaction_details_f.32.42, \n  proteome_vs_imex_interaction_details_f.32.42$Mass < 42000)\n#proteome_vs_imex_interaction_details_f.32.42.biogrid.annotation5.5 = dplyr::filter(\n#  proteome_vs_imex_interaction_details_f.32.42.biogrid, \n#  proteome_vs_imex_interaction_details_f.32.42.biogrid$Annotation == \"5 out of 5\")\nwrite(proteome_vs_imex_interaction_details_f.32.42$whole_proteome_IDs, \"proteome_vs_imex_interaction_details_f.32.42.txt\")\n#table(proteome_vs_imex_interaction_details_f.not_in_IMEx)\n#swissprot = filter(proteome_vs_imex_interaction_details_f,\n#       proteome_vs_imex_interaction_details_f$whole_proteome_Uniprot == 1)\n#write(swissprot$whole_proteome_IDs, \"swissprot.txt\")\n\n```\n\nQuick GO enrichment in Cytoscape ClueGO showed that large chunk of the missing \nhuman interactome consists of odor receptors (36kDa spike), also bitter taste receptors ~20 genes,\nmembrane transporters.\n\n### GO terms decribing missing proteins\n```{r ClueGO_result}\ncell.process = EBImage::readImage('./results/proteome_vs_imex_interaction_details_f.not_in_IMEx.cell.process.png') \nEBImage::display(cell.process, \"GO terms decribing missing proteins from IMEx (olfactory receptors included)\")\n```\n\ndetailed GO enrichment results available here - \"./results/proteome_vs_imex_details_f.not_in_IMEx.ClueGO/\"\n\n### Removed olfactory receptors\n```{r without_olfactory, fig.width = 12, fig.height = 12}\n## removing olfactory receptors:\n      proteome_vs_imex_details_f_minus_odor = proteome_vs_imex_interaction_details_f[-grep(\"Odor\", proteome_vs_imex_interaction_details_f$Protein.names),]\n      proteome_vs_imex_details_f_minus_odor_olf = proteome_vs_imex_details_f_minus_odor[-grep(\"Olfactory\", proteome_vs_imex_details_f_minus_odor$Protein.names),]\n      print(paste(\"number of proteins containing \\\"Odor\\\" or \\\"Olfactory\\\" in protein name: \", length(grep(\"Odor\", proteome_vs_imex_interaction_details_f$Protein.names)) +\n  length(grep(\"Olfa\", proteome_vs_imex_interaction_details_f$Protein.names))))\n      ## density without olfactory receptors:\n      #ggplot(proteome_vs_imex_details_f_minus_odor_olf, aes(x = Mass, color = whole_proteome_Uniprot_IMEx, alpha =0.5)) +geom_density()+ scale_x_log10()\n      two_hybrid = dplyr::filter(proteome_vs_imex_details_f_minus_odor_olf, two_hybrid == 1)\ntwo_hybrid$two_hybrid_vs_AP_MS = \"two_hybrid\"\nAP_MS = dplyr::filter(proteome_vs_imex_details_f_minus_odor_olf, AP_MS == 1)\nAP_MS$two_hybrid_vs_AP_MS = \"AP_MS\"\nfor_plot = rbind(proteome_vs_imex_details_f_minus_odor_olf, two_hybrid, AP_MS)\nfor_plot$two_hybrid_vs_AP_MS = factor(for_plot$two_hybrid_vs_AP_MS, ordered = F)\n## Calculating protein median protein mass for each group\nyy = split(for_plot, for_plot$two_hybrid_vs_AP_MS)\nMass_median = sapply(yy, function(x){median(log10(x$Mass))})\nkDa_median_mass = (10^Mass_median)/1000\nplot_labels = paste0(gsub(\"_\",\" \",levels(for_plot$two_hybrid_vs_AP_MS)),\", \\n (median mass: \", signif(kDa_median_mass,3),\" kDa)\")\n\n## Violin plot - proportional\nggplot(for_plot, aes(y = Mass, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +\n  geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = \"count\", alpha =0.7) +\n  scale_y_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n                labels = trans_format(\"log10\", math_format(10^.x))) +\n  scale_x_discrete(labels = plot_labels)+\n  geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +\n  ylab(\"Mass, Da, log10 scale\")+\n  xlab(\"presence in IMEx, detection method\")+\n  ggtitle(\"How does protein interaction detection method depend on the protein length?\",\n          subtitle = \"all violins have the same area\")+\n  coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)\n\n## Violin plot - not proportional\nggplot(for_plot, aes(y = Mass, x =two_hybrid_vs_AP_MS, fill = two_hybrid_vs_AP_MS)) +\n  geom_violin(draw_quantiles = c(0.05,0.25,0.495,0.5,0.505,0.75,0.95),scale = \"area\", alpha =0.7) +\n  scale_y_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n                labels = trans_format(\"log10\", math_format(10^.x))) +\n  scale_x_discrete(labels = plot_labels)+\n  geom_abline(slope = 0, intercept = Mass_median, alpha =0.1) +\n  ylab(\"Mass, Da, log10 scale\")+\n  xlab(\"presence in IMEx, detection method\")+\n  ggtitle(\"How does protein interaction detection method depend on the protein length?\",\n          subtitle = \"all violins have the same area\")+\n  coord_flip()#+facet_grid(two_hybrid_vs_AP_MS~Organism)\n\n# creating a list of missing proteins for ClueGO\nproteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx = dplyr::filter(\n  proteome_vs_imex_details_f_minus_odor_olf, two_hybrid_vs_AP_MS == \"not_in_IMEx\")\nwrite(proteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx$whole_proteome_IDs, \"proteome_vs_imex_interaction_details_f.not_in_IMEx_olfac_removed.txt\")\n```\n\n### GO terms decribing missing proteins (after removing olfactory receptors)\n```{r ClueGO_result.olf.removed}\ncell.process.olf.removed = EBImage::readImage('./results/proteome_vs_imex_interaction_details_f.not_in_IMEx.ofl_removed.cell.process.png') \nEBImage::display(cell.process.olf.removed, title = \"GO terms decribing missing proteins from IMEx \\n (olfactory receptors removed)\")\n```\n\ndetailed GO enrichment results available here - \"./results/proteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx_ClueGO/\"\n\n```{r imagematrix, fig.width = 15, fig.height = 10}\n#image0 = proteome_vs_imex_interaction_details_f[,c(2:3,6:18,29:31)]\n#image = as.data.frame(lapply(image0, function(x){as.numeric(x)}))\n#rafalib::mypar()\n#rafalib::imagemat(image)\n#colnames(image)\nimage1 = proteome_vs_imex_interaction_details_f[,c(1:3,6:18,30:32)]\nimage1.melt = reshape2::melt(image1)\ncolnames(image1.melt) = c(\"whole_proteome_IDs\", \"group\", \"presence\")\nggplot(image1.melt, aes(group, whole_proteome_IDs)) + geom_tile(aes(fill = presence)) +  scale_fill_gradient(low = \"white\", high = \"black\") + theme(axis.text.x = element_text(size = 8, angle = 10, margin = margin(t=8)))\n\n```\n\n### GO terms decribing missing proteins from both IMEx and BioGRID \n(which includes The BioPlex Network) - (after removing olfactory receptors)\nThis would suggest which areas of interactome missing consistently across primary databases\n```{r GO_exl.BioGRID}\n# filtering out proteins present in BioGRID\nproteome_vs_imex_details_f_minus_odor_olf_biogrid.not_in_IMEx = dplyr::filter(\n  proteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx, \n  proteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx$BioGRID_from_Mentha == 0)\nwrite(proteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx$whole_proteome_IDs, \"proteome_vs_imex_details_f_minus_odor_olf_biogrid.not_in_IMEx.txt\")\n## reporting overrepresented GO terms\ncell.process.olf.removed = EBImage::readImage('./results/proteome_vs_imex_details_f_minus_odor_olf_biogrid.not_in_IMEx.cell.process.png') \nEBImage::display(cell.process.olf.removed, title = \"GO terms decribing missing proteins from both IMEx and BioGRID \\n (olfactory receptors removed)\")\n```\n\nBioGRID contains for `r nrow(proteome_vs_imex_details_f_minus_odor_olf.not_in_IMEx) - nrow(proteome_vs_imex_details_f_minus_odor_olf_biogrid.not_in_IMEx)` proteins missing in IntAct\n\ndetailed GO enrichment results available here - \"./results/proteome_vs_imex_details_f_minus_odor_olf_biogrid.not_in_IMEx_ClueGO/\"\n\n### Do affinity-purification mass-spectrometry or two-hybrid have a bias tovards including / omitting certain groups of proteins? \nAP-MS does have a bias towards longer proteins, so does it avoid/include certain functional groups?\nbiological process\n\n```{r ClueGO_ap_ms}\n# filtering out proteins identified by AP-MS\nproteome_vs_imex_interaction_details_f_AP_MS = dplyr::filter(\n  proteome_vs_imex_interaction_details_f, \n  proteome_vs_imex_interaction_details_f$AP_MS == 1)\nwrite(proteome_vs_imex_interaction_details_f_AP_MS$whole_proteome_IDs, \"proteome_vs_imex_interaction_details_f_AP_MS.txt\")\n\n## reporting overrepresented GO terms\ncell.process.olf.removed = EBImage::readImage('./results/proteome_vs_imex_interaction_details_f_AP_MS_two_hybrid_ClueGO_over.png') \nEBImage::display(cell.process.olf.removed, title = \"GO terms decribing proteins-interactors identified using \\n affinity-purification mass-spectrometry (enrichment)\")\n## reporting underrepresented GO terms\ncell.process.ap_ms = EBImage::readImage('./results/proteome_vs_imex_interaction_details_f_AP_MS.cell.process.under.png') \nEBImage::display(cell.process.ap_ms, title = \"GO terms decribing proteins-interactors identified using \\n affinity-purification mass-spectrometry (enrichment)\")\n```\n\ndetailed GO enrichment results available here - \"./results/proteome_vs_imex_interaction_details_f_AP_MS_ClueGO/\"\nand here \"./results/proteome_vs_imex_interaction_details_f_AP_MS_two_hybrid_ClueGO_over/\"\n\n### Does two-hybrid has a bias tovards including / omitting certain groups of proteins? \nAP-MS does have a bias towards longer proteins, so does it avoid/include certain functional groups?\nbiological process\n\n```{r ClueGO_two_hybrid}\n# filtering out proteins identified by AP-MS\nproteome_vs_imex_interaction_details_f_two_hybrid = dplyr::filter(\n  proteome_vs_imex_interaction_details_f, \n  proteome_vs_imex_interaction_details_f$two_hybrid == 1)\nwrite(proteome_vs_imex_interaction_details_f_two_hybrid$whole_proteome_IDs, \"proteome_vs_imex_interaction_details_f_two_hybrid.txt\")\n\n## reporting overrepresented GO terms\ncell.process.olf.removed = EBImage::readImage('./results/proteome_vs_imex_interaction_details_f_two_hybrid.cell.process.png') \nEBImage::display(cell.process.olf.removed, title = \"GO terms decribing proteins-interactors identified using \\n two-hybrid (enrichment)\")\n## reporting underrepresented GO terms\ncell.process.two_hybrid = EBImage::readImage('./results/proteome_vs_imex_interaction_details_f_two_hybrid.cell.process.under.png') \nEBImage::display(cell.process.two_hybrid, title = \"GO terms decribing proteins-interactors identified using \\n two-hybrid (enrichment)\")\n```\n\ndetailed GO enrichment results available here - \"./results/proteome_vs_imex_interaction_details_f_AP_MS_ClueGO/\"\nand here \"./results/proteome_vs_imex_interaction_details_f_AP_MS_ClueGO_under/\"\n\n```{r session}\nsessionInfo()\n```",
    "created" : 1481643623931.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3109463268",
    "id" : "CE8E7648",
    "lastKnownWriteTime" : 1481900376,
    "last_content_update" : 1482169333622,
    "path" : "~/Desktop/VItalii_EBI/imex_vs_uniprot/swissprot_vs_imex_interaction_properties.Rmd",
    "project_path" : "swissprot_vs_imex_interaction_properties.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}