"0","      SPECIES_ID = SPECIES_IDs$SPECIES_ID"
"0","      ## reading logic table and getting list of proteins"
"0","      if(SPECIES_NAME != ""strain K12""){"
"0","      filename_vs_3 = paste(""./analysis/"",""proteome_vs_interactome_vs_BioGRID_f_"", SPECIES_ID,""_reviewed_"",r,""_isoforms_"",i,""_"", date,"".txt"", sep = """")}"
"0","      if(SPECIES_NAME == ""strain K12""){"
"0","      filename_vs_3 = paste(""./analysis/"",""proteome_vs_interactome_f_"", SPECIES_ID,""_reviewed_"",r,""_isoforms_"",i,""_"", date,"".txt"", sep = """")}"
"0","      biogrid_from_mentha_vs_proteome_vs_imex_f = as.data.frame(read.delim(filename_vs_3, stringsAsFactors = F))"
"0","      IDs = dplyr::filter(biogrid_from_mentha_vs_proteome_vs_imex_f, whole_proteome_Uniprot==1)%>% dplyr::select(whole_proteome_IDs)"
"0","      filename_perl = paste0(""./Data/IDs_for_PERL_"",date,"".txt"")"
"0","      filename_out_of_perl = paste0(""./Data/Swissprot_list_from_proteome_vs_interactome_vs_BioGRID_f_"", SPECIES_ID,""_reviewed_"",r,""_isoforms_"",i,""_"", date,"""")"
"0","      file.create(filename_out_of_perl)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","      write(IDs$whole_proteome_IDs, file = filename_perl)"
"0","      source(""download_whole_proteome.R"")"
"0","      whole_proteome_query = download_whole_proteome(SPECIES_ID, date = ""2016-12-14"")"
"1","[1]"
"1"," ""Querying Uniprot for the whole proteome"""
"1","
"
"1","[1]"
"1"," ""Number of proteins (not including isoforms, but isoforms dowloaded, from query) in the whole proteome for SPECIES_ID 9606 total/unique"""
"1","
"
"1","
"
"1","  9606 "
"1","
"
"1","156576 "
"1","
"
"1","[1]"
"1"," 156576"
"1","
"
"1","[1]"
"1"," ""Querying Uniprot for the whole proteome...done"""
"1","
"
"0","      uniprot_query = dplyr::filter(whole_proteome_query, Status == ""reviewed"")"
"0","      ##============================================================================##"
"0","      ## merging information from Uniprot to the logic table"
"0","      proteome_vs_imex_details_f = merge(filter(biogrid_from_mentha_vs_proteome_vs_imex_f, whole_proteome_Uniprot==1), "
"0","                                         uniprot_query, "
"0","                                         by.x = ""whole_proteome_IDs"","
"0","                                         by.y = ""Entry"")"
"0","      proteome_vs_imex_details_f$Mass = gsub("","","""",proteome_vs_imex_details_f$Mass)"
"0","      proteome_vs_imex_details_f$Mass = as.numeric(proteome_vs_imex_details_f$Mass)"
"0","      ## creating a factor variable for presence_in_Uniprot.presence_in_IMEx (1_0/1_1)"
"0","      proteome_vs_imex_details_f[,length(proteome_vs_imex_details_f)+1] = interaction(proteome_vs_imex_details_f$whole_proteome_Uniprot, proteome_vs_imex_details_f$IMEx, sep = ""_"")"
"0","      colnames(proteome_vs_imex_details_f)[length(proteome_vs_imex_details_f)] = paste0(colnames(proteome_vs_imex_details_f)[2], ""_"",""IMEx"")"
"0","      levels(proteome_vs_imex_details_f$whole_proteome_Uniprot_IMEx) = c(""SwissProt_not_IMEX"", ""SwissProt_and_IMEX"")"
"0","      ##============================================================================##"
"0","      ## saving combined logic table + protein properties from Uniprot"
"0","      filename_vs_2 = paste(""./analysis/"",""proteome_vs_interactome_protein_properties_f_"", n,""_reviewed_"",r,""_isoforms_"",i,""_"", date,"".txt"", sep = """")"
"0","      write.table(proteome_vs_imex_details_f,filename_vs_2,col.names=T,row.names=F,sep=""\t"",quote=F)"
